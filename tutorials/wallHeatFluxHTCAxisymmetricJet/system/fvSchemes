// Auto generated with dict2foam
/*--------------------------------*- C++ -*----------------------------------*| =========                 |                                                |
| \      /  F ield         | OpenFOAM GUI Project: creativeFields           |
|  \    /   O peration     | Version:  0.8.9.0                                  |
|   \  /    A nd           | Web: www.c-fields.com                                       |
|    \/     M anipulation  |                                                |
\*---------------------------------------------------------------------------*/

FoamFile
{
    location    "system";
    version     2;
    class       dictionary;
    object      fvSchemes;
    format      ascii;
}


snGradSchemes
{
    default    corrected;
}


laplacianSchemes
{
    default    Gauss linear corrected;
}


fluxRequired
{
    default    no;
    p           ;
}


wallDist
{
    method    meshWave;
}


gradSchemes
{
    default    cellLimited Gauss linear 1;
}


divSchemes
{
    div(phi,e)                             bounded Gauss limitedLinear 1;
    div(phi,omega)                         bounded Gauss limitedLinear 1;
    div(phi,Ekp                            bounded Gauss limitedLinear 1;
    div(phi,h)                             bounded Gauss limitedLinear 1;
    div(phid,p)                            bounded Gauss limitedLinear 1;
    div(phi,K)                             bounded Gauss limitedLinear 1;
    div((nuEff*dev2(T(grad(U)))))          Gauss linear;
    div(phi,U)                             bounded Gauss linearUpwindV default;
    div((nuEff*dev(grad(U).T())))          Gauss linear;
    div((nuEff*dev(T(grad(U)))))           Gauss linear;
    div(phi,T)                             bounded Gauss limitedLinear 1;
    div(tauMC)                             Gauss linear;
    div(phi,k)                             bounded Gauss limitedLinear 1;
    div(((rho*nuEff)*dev2(T(grad(U)))))    Gauss linear;
    div(phi,v2)                            bounded Gauss limitedLinear 1;
    div(phi,epsilon)                       bounded Gauss limitedLinear 1;
    div(phi,Ekp)                           bounded Gauss limitedLinear 1;
}


ddtSchemes
{
    default    steadyState;
}


interpolationSchemes
{
    default    linear;
}


// ************************************************************************* //
