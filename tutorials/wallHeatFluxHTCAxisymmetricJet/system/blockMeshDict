/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

backgroundMesh
{
    length  50e-3;
    rA      5e-3;   // radius of inlet patch
    rB      100e-3; // outer radius
    lengthCells 100;
    rAcells 5;
    rBcells 50;
    lengthGrading 0.1;
    rGrading 3;    
}

convertToMeters 1;

vertices
(
    (                      0                   0 -1)
    ($:backgroundMesh.length                   0 -1)
    (                      0 $:backgroundMesh.rA -1)
    ($:backgroundMesh.length $:backgroundMesh.rA -1)
    (                      0 $:backgroundMesh.rB -1)
    ($:backgroundMesh.length $:backgroundMesh.rB -1)

    (                      0                   0  0)
    ($:backgroundMesh.length                   0  0)
    (                      0 $:backgroundMesh.rA  0)
    ($:backgroundMesh.length $:backgroundMesh.rA  0)
    (                      0 $:backgroundMesh.rB  0)
    ($:backgroundMesh.length $:backgroundMesh.rB  0)
);

blocks
(
    hex (0 1 3 2 6 7 9 8)
    ($:backgroundMesh.lengthCells $:backgroundMesh.rAcells 1)
    simpleGrading ($:backgroundMesh.lengthGrading 1 1)

    hex (2 3 5 4 8 9 11 10)
    ($:backgroundMesh.lengthCells $:backgroundMesh.rBcells 1)
    simpleGrading ($:backgroundMesh.lengthGrading $:backgroundMesh.rGrading 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 6 8 2)
        );
    }

    front
    {
        type symmetry;
        faces
        (
            (6 7  9 8)
            (8 9 11 10)
        );
    }

    back
    {
        type symmetry;
        faces
        (
            (0 1 3 2)
            (2 3 5 4)
        );
    }

    atmosphere
    {
        type patch;
        faces
        (
            (2 8 10  4)
            (4 5 11 10)
        );
    }
    
    heatedWall
    {
        type wall;
        faces
        (
            (3 1  7  9)
            (5 3  9 11)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
